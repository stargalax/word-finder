import fitz  # PyMuPDF
import json
from google.colab import files
import os

page_texts = {}

def extract_text_from_pdf(pdf_path):
    global page_texts
    pdf_document = fitz.open(pdf_path)
    
    page_texts = {}  # Reset page_texts dictionary
    
    for page_num in range(len(pdf_document)):
        page = pdf_document.load_page(page_num)
        text = page.get_text("text")
        page_texts[page_num] = text

    with open('page_texts.json', 'w') as f:
        json.dump(page_texts, f, ensure_ascii=False, indent=2)

def load_text_from_file():
    global page_texts
    with open('page_texts.json', 'r') as f:
        page_texts = json.load(f)

def search_word_in_stored_text(search_word):
    results = []

    for page_num, text in page_texts.items():
        if isinstance(text, str) and search_word.lower() in text.lower():
            results.append((page_num + 1, text))  # Store the page number and text
        elif not isinstance(text, str):
            print(f"Warning: Page {page_num} text is not a string.")

    return results

# Upload the file
uploaded = files.upload()

pdf_path = list(uploaded.keys())[0]

# Check if page_texts.json exists and load or extract text from PDF
if not os.path.exists('page_texts.json'):
    extract_text_from_pdf(pdf_path)
else:
    load_text_from_file()

while True:
    search_word = input("Enter the word to search (or 'exit' to stop): ")

    if search_word.lower() == 'exit':
        break

    results = search_word_in_stored_text(search_word)

    if results:
        print(f"The word '{search_word}' was found on the following pages:")
        for page_num, _ in results:
            print(f"Page {page_num}")
    else:
        print(f"The word '{search_word}' was not found in the document.")
